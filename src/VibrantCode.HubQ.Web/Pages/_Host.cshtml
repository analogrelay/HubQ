@page "/"
@using Microsoft.AspNetCore.Authentication
@using VibrantCode.HubQ.Web.State
@namespace VibrantCode.HubQ.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{ 
    // Prepare initial state during the server render
    string gitHubToken = null;
    if(User.Identity.IsAuthenticated)
    {
        gitHubToken = await HttpContext.GetTokenAsync("access_token");
    }

    var initialState = new ApplicationState(gitHubToken);
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HubQ</title>
    <base href="~/" />
    <environment include="Development">
        <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
              asp-fallback-href="css/bootstrap/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute"
              crossorigin="anonymous"
              integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"/>
    </environment>
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
    @(await Html.RenderComponentAsync<App>(new { InitialState = initialState })) 
    </app>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>
